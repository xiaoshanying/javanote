如何用区块链存储文件
1.理解CAP理论

2.生态里边的角色

  交易发布者 -> 中介者(切分交易,排序交易,发布消息) -> 矿工(打包交易,存储) ->质检员(检查存储是否完毕)

2.文件存储流程
  用户上传文件 -> 文件切分为单位大小 -> 每个单位是一个交易
  -> 交易发布到网络中 -> 矿工去争夺打包权 -> 挖到区块,打包交易
  -> 区块确认 -> 完结

3.文件查询流程
  输入区块地址 -> 根据交易列表找到文件分片 -> 重组分片 -> 获取完整文件

4.用户上传文件
  相当于用户发起一笔交易,不过这个交易会按单位进行拆分。因为文件大小是不确定
  的，用户可能想存储一个大文件。1个G的文件，假如被一个人打包了，存储到电脑
  可能会耗费很长时间，用户上传也是一个很慢的过程。
  可能存在的问题:
             文件太大?
             切分文件时出现错误?
             切分上传时网络中断?
  文件太大?
     用户存储文件需要前期去完成任务，获取一定量的交易币。文件越大耗费的币越多。
     大文件上传时需要在本地切分为标准大小的文件，每一个切分后的文件对应网络上的
     一笔交易。
     每一个单位文件切分后需要加一个公共的头，标识此文件,尾部加一个序列号，用于
     连接文件。
  切分文件时出现错误?
     切分时需要判断当前的币是否足够切分这个文件,不够的话会导致失败。
     切分时程序出现了异常，也会导致失败。
  切分后上传到网络出现异常？
     切分后上传时网络出现卡顿,导致失败
     未上传完毕，导致失败

  失败的交易只是发生在本地，不扣减币。

5.交易发布到网络中 https://blog.csdn.net/yinanmo5569/article/details/80443654
  切分的文件作为交易在网络中，等待矿工打包。打包到交易的矿工，把交易的数据存储到自己的磁盘
  上。并且广播自己已经打包区块，区块加入到原有的区块链中。交易完成
6.
  方案1:
      当一个节点加入到区块链,需要同步区块链的前6个区块。
      假设从创世区块开始
      文件1(切分成1,2,3,4 4个交易)
      文件2(切分成5,6,7 3个交易)
      区块1 -> 区块2(保存交易1,2) ->区块3(保存交易3,4)
      当节点2加入区块时:需要同步区块1，2，3
      此时文件2的交易也加入到区块中
      1 -> 2 -> 3 -> 4(5) -> 5(6) -> 7(7)
      当节点3加入的时候，需要同步(1,2,3,4,5,6区块)
      假设一个大文件被切分成大于6个的交易时,下一个节点同步,可能造成区块部分未被同步的情形,当前方案不可行。
  方案2:
      区块链是把交易信息存储在区块中的。区块上信息查询因为区块在本地同步了，所以相当于在本地检索，是比较快的。

简单记:
  


