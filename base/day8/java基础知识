Java基础知识
阅读源代码
String、Integer、Long、Enum、BigDecimal、ThreadLocal、
ClassLoader & URLClassLoader、ArrayList & LinkedList、
HashMap & LinkedHashMap & TreeMap & CouncurrentHashMap、
HashSet & LinkedHashSet & TreeSet

1.String https://blog.csdn.net/zhcswlp0625/article/details/57508127
2.Integer https://blog.csdn.net/u011080472/article/details/51406198
  (1)Integer使用了一个静态内部类（嵌套类），里面包含了一个缓存数组cache[]，默认情况下，[-128, 127]之间的整数会在第一次使用时（类加载时）被自动装箱，
      放在cache[]数组里。区间的上限值high设置JVM参数-XX:AutoBoxCacheMax来改变，默认情况下参数为127（byte类型的范围），存储在java.lang.Integer.IntegerCache.high属性中。
  (2)而使用Integer.valueOf()进行构造时，就使用了cache[]缓存数组。因此使用该方法构造的Integer对象如果在缓存区间内，会直接返回cache[]数组内的相应的引用，自然就是同一个对象；否则
     将生成一个全新的Integer对象。与此对应的，如果使用构造函数Integer()直接构造，根本没有使用到缓存数组，生成的一定是全新的Integer对象。因此使用Integer.valueOf()构造能够节省资源，提高效率。
  (3)stringSize实现
     这个函数不是个public权限的函数，作为内部工具方法使用。这个方法的实现是很巧妙的，避免除法、求余等，判断条件简单，效率高（采用静态field分析，而不是负责逻辑判断可以明显提高效果）。（int 最大长只有10）
      final static int [] sizeTable = { 9, 99, 999, 9999, 99999, 999999, 9999999,
                                           99999999, 999999999, Integer.MAX_VALUE };
         // Requires positive x 参数必须为正数
         static int stringSize(int x) {
             for (int i=0; ; i++)
                 if (x <= sizeTable[i])
                     return i+1;
         }
3.Long



